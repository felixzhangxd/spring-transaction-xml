<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 
				timeout="-1"                              (超出{timeout}秒，全部回滚与no-rollback-for无关)
				no-rollback-for="java.lang.Throwable"     ({no-rollback-for}不回滚)
				rollback-for="java.lang.RuntimeException" ({rollback-for}指定异常回滚)
				read-only="false"                         (read-only="true"指只读事务，可以提升性能)
				isolation="DEFAULT"				数据库默认的隔离级别					
                          "READ_UNCOMMITTED"    未提交读
                          "READ_COMMITTED"      提交读
                          "REPEATABLE_READ"     重复读
                          "SERIALIZABLE"        序列化
				
                propagation="REQUIRED"	    (无 => T1) or (T1 => T1)
                            "REQUIRES_NEW"  (无 => T1) or (T1 => T2) 
                            "SUPPORTS"      (无 => 无) or (T1 => T1)
                            "NOT_SUPPORTED" (无 => 无) or (T1 => 无)
                            "MANDATORY"     (无 => 异常) or (T1 => T1)
                            "NEVER"         (无 => 无) or (T1 => 异常) 
                            "NESTED"        (无 => T1) or (T1 => T1),嵌套事务回滚不影响外部事务，但外部事务回滚将导致嵌套事务回滚
			-->
			<!--  
			<tx:method name="doTransfer*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
			<tx:method name="payServiceFee*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
			-->
			<tx:method name="transfer*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config proxy-target-class="false" expose-proxy="false">
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* biz.ezcom.spring.transaction.service.impl.*.*(..))"/>
	</aop:config>

</beans>	
